services:
  frontend:
    container_name: transcendence_front
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/usr/src/app
    ports:
      - "8080:8080"
    restart: unless-stopped
    depends_on:
      - backend
    env_file:
      - .env
  backend:
    container_name: transcendence_back
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/usr/src/app
    ports:
      - "8000:8000"
    networks:
      - backend-network
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - .env
  db:
    container_name: transcendence_db
    image: postgres:17
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - backend-network
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  cache:
    image: redis:6
    expose:
      - 6379
    networks:
      - backend-network
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    volumes:
      - cache_data:/data
    restart: unless-stopped

  waf:
    container_name: modecurity_waf
    build:
      context: ./modsecurity_waf
      dockerfile: Dockerfile
    platform: linux/amd64
    ports:
      - "8081:8081" # WAF exposed to the client
    depends_on:
      - backend
    networks:
      - backend-network

  hashicorpvault:
    container_name: hashicorpvault
    build:
      context: ./hashiCorpVault
      dockerfile: Dockerfile
    ports:
      - "8200:8200"
    volumes:
      - ./hashiCorpVault/src/vault-config.hcl:/vault/config/vault.hcl
      - ./hashiCorpVault/data/.root-token:/vault/data/.root-token
      - ./hashiCorpVault/data/.unseal-key:/vault/data/.unseal-key
    environment:
      - VAULT_ADDR=http://localhost:8200
      - VAULT_CLUSTER_ADDR=http://localhost:8201
      - VAULT_DEV_LISTEN_ADDRESS=
      - VAULT_TOKEN=root
      - VAULT_UI=true
    cap_add:
      - IPC_LOCK
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8200/v1/sys/health"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  cache_data:
    driver: local

